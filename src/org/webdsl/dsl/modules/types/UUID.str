module org/webdsl/dsl/modules/types/UUID

imports
  libstrategolib
  libwebdsl-front

//this type is used as primary key for entities, the WebDSL type UUID is convenient for transformations

rules

  is-simple-sort = ?SimpleSort("UUID")
  extends-builtin : "UUID" -> "Object"

rules

  check-builtin-signature :
    (None(), "UUIDFromString", [s]) ->  SimpleSort("UUID")
    where <type-compatible> (s, SimpleSort("String"))

  //toString defined generically in types/string.str

  check-builtin-signature :
    (None(), "randomUUID", []) -> SimpleSort("UUID")

  type-default-value:
    SimpleSort("UUID") -> exp |[ null ]|

  desugar-in-define-context:
    TemplateCall("output", [e_expr],                       passign*, body){anno*} ->
    TemplateCall("output", [Call(e_expr, "toString", [])], passign*, body)
    // intentionally removes annotations on "output" and TemplateCall, because it will resolve to a different definition
    where SimpleSort("UUID") := <type-of> e_expr
