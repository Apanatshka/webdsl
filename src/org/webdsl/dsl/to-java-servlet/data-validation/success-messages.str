module org/webdsl/dsl/to-java-servlet/data-validation/success-messages
imports
  libstrategolib
  libjava-front

imports
  libwebdsl-front

/**
 *  Success messages
 *  IncomingSuccessMessages partly implemented in dispatch-servlet.str and java-page.str as well
 */

rules //produce messages

  call-to-java-servlet :
    exp  |[ message(e1) ]| ->   java |[ utils.ThreadLocalServlet.get().getOutgoingSuccessMessages().add(e2) ]|
    where <anno-string-type-compatible> e1
    with  e2 := <expression-to-java-servlet> e1

rules //store messages

  generate-code-java-servlet-once =
    pkgtname_domain := <DomainPackage>
    ; <emit-java-code; fail> compilation-unit|[
      package utils;

      public abstract class PageServlet {

        protected void renderIncomingSuccessMessages(){
          if(!utils.ThreadLocalServlet.get().getIncomingSuccessMessages().isEmpty()) {
            ~*<java-servlet-template-phase-inits>
            Class<?> ts = envGlobalAndSession.getTemplate("messages");
            try{
              ((utils.TemplateServlet)ts.newInstance()).render(null, org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY, envGlobalAndSession, null);
            }
            catch(Exception ie){
              org.webdsl.logging.Logger.error(ie);
            }
          }
        }

        protected void renderLogSqlMessage() {
          String logsql = ((pkgtname_domain.SessionManager)utils.ThreadLocalServlet.get().getSessionManager()).getLogsqlMessage();
          if(logsql != null && !logsql.equals("")) {
            ((pkgtname_domain.SessionManager)utils.ThreadLocalServlet.get().getSessionManager()).setLogsqlMessageNoEventsOrValidation(null);
            java.io.PrintWriter out = utils.ThreadLocalOut.peek();
            out.print("<div class=\"logsql\">");
            out.print(logsql);
            out.print("</div><hr/>");
          }
        }

      }

    ]|
